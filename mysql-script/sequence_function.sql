-- 序列 
DROP TABLE IF EXISTS  BASE_SYS_SEQUENCE;
CREATE TABLE BASE_SYS_SEQUENCE(
	SEQ_NAME VARCHAR(55) PRIMARY KEY NOT NULL COMMENT '序列名称',
	CURRENT_VAL BIGINT(19) DEFAULT 0 COMMENT '当前值',
	VAL_SPAN INT(11) DEFAULT 1 COMMENT '跨度'
)COMMENT '序列';

-- 获取当前序列值
DROP FUNCTION IF EXISTS GET_SEQ_CURRENT;
DELIMITER //  
CREATE FUNCTION GET_SEQ_CURRENT (SEQUENCE_NAME VARCHAR(55)) RETURNS BIGINT (19)
BEGIN
	DECLARE RETURN_VAL BIGINT (19) ; -- 返回值
	SET RETURN_VAL = 0 ; 
	SELECT
		CURRENT_VAL INTO RETURN_VAL
	FROM
		BASE_SYS_SEQUENCE
	WHERE
		SEQ_NAME = SEQUENCE_NAME
	LIMIT 1 ;
	RETURN RETURN_VAL ;
END//
DELIMITER ;
-- select GET_SEQ_CURRENT('TEST'); 测试


-- 获取下一个
DROP FUNCTION IF EXISTS GET_SEQ_NEXT;
DELIMITER //  
CREATE FUNCTION GET_SEQ_NEXT (SEQUENCE_NAME VARCHAR(55)) RETURNS BIGINT (19)
BEGIN
	DECLARE RETURN_VAL BIGINT (19) ; -- 返回值
	SET RETURN_VAL = 0 ;
	UPDATE BASE_SYS_SEQUENCE SET CURRENT_VAL = CURRENT_VAL + VAL_SPAN WHERE SEQ_NAME = SEQUENCE_NAME;
	RETURN GET_SEQ_CURRENT(SEQUENCE_NAME);
END// 
DELIMITER ;
-- select GET_SEQ_NEXT('TEST'); 测试

-- 获取上一个
DROP FUNCTION IF EXISTS GET_SEQ_UPPER;
DELIMITER //  
CREATE FUNCTION GET_SEQ_UPPER (SEQUENCE_NAME VARCHAR(55)) RETURNS BIGINT (19)
BEGIN
		DECLARE RETURN_VAL BIGINT (19) ; -- 返回值
	SET RETURN_VAL = 0 ; 
	SELECT
		CURRENT_VAL - 1 INTO RETURN_VAL
	FROM
		BASE_SYS_SEQUENCE
	WHERE
		SEQ_NAME = SEQUENCE_NAME
	LIMIT 1 ;
	RETURN RETURN_VAL ;
END// 
DELIMITER ;
