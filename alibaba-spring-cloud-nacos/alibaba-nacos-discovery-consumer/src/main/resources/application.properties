server.port=10002
#服务名称
spring.application.name=cloud-consumer
#Nacos Server 地址
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.cloud.nacos.discovery.service=${spring.application.name}
management.endpoints.web.exposure.include=*



#spring.cloud.nacos.discovery.server-addr  #Nacos Server 启动监听的ip地址和端口
#spring.cloud.nacos.discovery.service  #给当前的服务命名
#spring.cloud.nacos.discovery.weight  #取值范围 1 到 100，数值越大，权重越大
#spring.cloud.nacos.discovery.network-interface #当IP未配置时，注册的IP为此网卡所对应的IP地址，如果此项也未配置，则默认取第一块网卡的地址
#spring.cloud.nacos.discovery.ip  #优先级最高
#spring.cloud.nacos.discovery.port  #默认情况下不用配置，会自动探测
#spring.cloud.nacos.discovery.namespace #常用场景之一是不同环境的注册的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。
#
#spring.cloud.nacos.discovery.access-key  #当要上阿里云时，阿里云上面的一个云账号名
#spring.cloud.nacos.discovery.secret-key #当要上阿里云时，阿里云上面的一个云账号密码
#spring.cloud.nacos.discovery.metadata    #使用Map格式配置，用户可以根据自己的需要自定义一些和服务相关的元数据信息
#spring.cloud.nacos.discovery.log-name   日志文件名
#spring.cloud.nacos.discovery.enpoint   #地域的某个服务的入口域名，通过此域名可以动态地拿到服务端地址
#ribbon.nacos.enabled  #是否集成Ribbon 一般都设置成true即可